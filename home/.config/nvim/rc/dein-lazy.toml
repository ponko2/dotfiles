[[plugins]]
repo = 'Shougo/junkfile.vim'
on_cmd = 'JunkfileOpen'
hook_add = '''
  nnoremap <silent> <Leader>j :<C-u>JunkfileOpen<CR>
'''

[[plugins]]
repo = 'Shougo/deol.nvim'
on_cmd = 'Deol'
hook_add = '''
  nnoremap <silent> <Leader>s :<C-u>Deol zsh -split<CR>
  nnoremap <silent> <Leader>S :<C-u>Deol zsh<CR>
  " nnoremap <silent> <Leader>S :<C-u>call deol#new({'command': 'zsh'})<CR>
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
on_map = {xn = '<Plug>(EasyAlign)'}
hook_add = '''
  " Start interactive EasyAlign in visual mode (e.g. vipga)
  xmap ga <Plug>(EasyAlign)

  " Start interactive EasyAlign for a motion/text object (e.g. gaip)
  nmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'kana/vim-niceblock'
on_map = {x = '<Plug>'}
hook_add = '''
  xmap I <Plug>(niceblock-I)
  xmap A <Plug>(niceblock-A)
'''

[[plugins]]
repo = 'kana/vim-operator-replace'
depends = 'vim-operator-user'
on_map = {x = '<Plug>'}
hook_add = '''
  xmap p <Plug>(operator-replace)
'''

[[plugins]]
repo = 'osyo-manga/vim-jplus'
on_map = {nv = '<Plug>'}
hook_add = '''
  nmap J <Plug>(jplus)
  vmap J <Plug>(jplus)
  nmap <Leader>J <Plug>(jplus-input)
  vmap <Leader>J <Plug>(jplus-input)
'''

[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent> j <Plug>(accelerated_jk_gj)
  nmap <silent> k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'
on_map = '<Plug>(operator-surround-'
hook_add = '''
  map <silent> sa <Plug>(operator-surround-append)
  map <silent> sd <Plug>(operator-surround-delete)
  map <silent> sr <Plug>(operator-surround-replace)
'''

[[plugins]]
repo = 'thinca/vim-visualstar'
on_map = {v = '<Plug>(visualstar-'}
hook_add = '''
  vmap *  <Plug>(visualstar-*)zvzz
  vmap #  <Plug>(visualstar-#)zvzz
  vmap g* <Plug>(visualstar-g*)zvzz
  vmap g# <Plug>(visualstar-g#)zvzz
'''

[[plugins]]
repo = 'mattn/emmet-vim'
on_event = 'InsertEnter'
hook_source = '''
  let g:user_emmet_settings = {
        \   'variables': {
        \     'lang': 'ja',
        \   },
        \ }
'''

[[plugins]]
repo = 'dense-analysis/ale'
on_event = 'BufRead'
hook_source = '''
  let g:ale_disable_lsp = 1
  let g:ale_sign_column_always = 1
  let g:ale_sign_error = '✖'
  let g:ale_sign_warning = '⚠'
  let g:ale_echo_msg_format = '[%linter%] %code: %%s [%severity%]'
  let g:ale_virtualtext_cursor = 1
  let g:ale_fix_on_save = 1
'''
[plugins.ftplugin]
go = '''
  let b:ale_linters = ['golangci-lint']
  let b:ale_go_golangci_lint_options = ''
  let b:ale_go_golangci_lint_package = 1
'''
java = '''
  let b:ale_linters = []
'''
javascript = '''
  let b:ale_linters = ['eslint']
  let b:ale_fixers = ['eslint', 'prettier']
'''
javascriptreact = '''
  let b:ale_linters = ['eslint']
  let b:ale_fixers = ['eslint', 'prettier']
'''
typescript = '''
  let b:ale_linters = ['eslint']
  let b:ale_fixers = ['eslint', 'prettier']
'''
typescriptreact = '''
  let b:ale_linters = ['eslint']
  let b:ale_fixers = ['eslint', 'prettier']
'''
css = '''
  let b:ale_fixers = ['prettier']
'''
scss = '''
  let b:ale_fixers = ['prettier']
'''
less = '''
  let b:ale_fixers = ['prettier']
'''
html = '''
  let b:ale_linters = []
'''
text = '''
  let b:ale_linters = ['textlint']
'''
markdown = '''
  let b:ale_linters = ['textlint']
'''

[[plugins]]
repo = 'rhysd/vim-gfm-syntax'
on_ft = 'markdown'
hook_add = '''
  let g:markdown_fenced_languages = ['java', 'javascript', 'json', 'sh', 'sql', 'diff']
'''

[[plugins]]
repo = 'mattn/vim-maketable'
on_ft = 'markdown'

[[plugins]]
repo = 'mattn/vim-goaddtags'
on_ft = 'go'

[[plugins]]
repo = 'mattn/vim-godoc'
on_ft = 'go'

[[plugins]]
repo = 'mattn/vim-goimpl'
on_ft = 'go'

[[plugins]]
repo = 'mattn/vim-goimports'
on_ft = 'go'

[[plugins]]
repo = 'mattn/vim-gorename'
on_ft = 'go'

[[plugins]]
repo = 'mattn/vim-gorun'
on_ft = 'go'
