[[plugins]]
repo = 'Konfekt/FastFold'
on_event = 'InsertEnter'
hook_post_source = 'FastFoldUpdate'

[[plugins]]
repo = 'Shougo/junkfile.vim'
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neomru.vim'
on_if = 1

[[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = 'context_filetype.vim'
if = "has('lua')"
on_event = 'InsertEnter'
hook_source = 'source ~/.vim/rc/plugins/neocomplete.rc.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_source = 'source ~/.vim/rc/plugins/neosnippet.rc.vim'

[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'
hook_source = 'source ~/.vim/rc/plugins/unite.rc.vim'
hook_add = '''
  if IsMac()
    nnoremap <silent> <D-p>
          \ :<C-u>Unite -buffer-name=files -no-split -multi-line -unique -silent
          \ jump_point file_point file_mru
          \ `finddir('.git', ';') != '' ? 'file_rec/git' : 'file_rec/async'`
          \ buffer_tab:- file file/new<CR>
  else
    nnoremap <silent> <C-p>
          \ :<C-u>Unite -buffer-name=files -no-split -multi-line -unique -silent
          \ jump_point file_point file_mru
          \ `finddir('.git', ';') != '' ? 'file_rec/git' : 'file_rec'`
          \ buffer_tab:- file file/new<CR>
  endif
'''

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'
on_map = {n = '<Plug>'}
on_if = "isdirectory(bufname('%'))"
hook_source = 'source ~/.vim/rc/plugins/vimfiler.rc.vim'

[[plugins]]
repo = 'h1mesuke/vim-alignta'
on_cmd = 'Align'

[[plugins]]
repo = 'easymotion/vim-easymotion'
on_map = '<Plug>'
hook_add = '''
  " <Leader>f{char} to move to {char}
  map  <Leader>f <Plug>(easymotion-bd-f)
  nmap <Leader>f <Plug>(easymotion-overwin-f)

  " s{char}{char} to move to {char}{char}
  "nmap s <Plug>(easymotion-overwin-f2)

  " Move to line
  map <Leader>L <Plug>(easymotion-bd-jk)
  nmap <Leader>L <Plug>(easymotion-overwin-line)

  " Move to word
  map  <Leader>w <Plug>(easymotion-bd-w)
  nmap <Leader>w <Plug>(easymotion-overwin-w)

  let g:EasyMotion_startofline = 0
  "let g:EasyMotion_show_prompt = 0
  "let g:EasyMotion_verbose = 0
'''

[[plugins]]
repo = 'kana/vim-niceblock'
on_map = {x = '<Plug>'}
hook_add = '''
  xmap I <Plug>(niceblock-I)
  xmap A <Plug>(niceblock-A)
'''

[[plugins]]
repo = 'kana/vim-operator-replace'
depends = 'vim-operator-user'
on_map = {x = '<Plug>'}
hook_add = '''
  xmap p <Plug>(operator-replace)
'''

[[plugins]]
repo = 'osyo-manga/vim-jplus'
on_map = {nv = '<Plug>'}
hook_add = '''
  nmap J <Plug>(jplus)
  vmap J <Plug>(jplus)
  nmap <Leader>J <Plug>(jplus-input)
  vmap <Leader>J <Plug>(jplus-input)
'''

[[plugins]]
repo = 'osyo-manga/vim-textobj-multiblock'
depends = 'vim-textobj-user'
on_map = {ox = '<Plug>'}

[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>j <Plug>(accelerated_jk_gj)
  nmap <silent>k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'
on_map = '<Plug>(operator-surround-'
hook_add = '''
  map <silent>sa <Plug>(operator-surround-append)
  map <silent>sd <Plug>(operator-surround-delete)
  map <silent>sr <Plug>(operator-surround-replace)
'''

[[plugins]]
repo = 'thinca/vim-visualstar'
on_map = '<Plug>(visualstar-'
hook_add = '''
  map *  <Plug>(visualstar-*)zv
  map #  <Plug>(visualstar-#)zv
  map g* <Plug>(visualstar-g*)zv
  map g# <Plug>(visualstar-g#)zv
'''

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'php', 'css', 'scss']
hook_add = '''
  let g:user_emmet_install_global = 0
  let g:user_emmet_settings = {
        \   'php' : {
        \     'extends' : 'html',
        \     'filters' : 'c',
        \   },
        \ }
  autocmd FileType html,php,css,scss EmmetInstall
'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
on_if = "finddir('.git', ';') != ''"
hook_add = '''
  let g:gitgutter_diff_args = 'HEAD'
'''
